<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Jmelosegui.DevOps.Client</name>
    </assembly>
    <members>
        <member name="P:Jmelosegui.DevOps.Client.BuildDefinitionApiClient.Connection">
            <summary>
            Gets the underlying connection.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.BuildApiClient.Connection">
            <summary>
            Gets the underlying connection.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.GitApiClient.Connection">
            <summary>
            Gets the underlying connection.
            </summary>
        </member>
        <member name="M:Jmelosegui.DevOps.Client.GitApiClient.CreateRepositoryAsync(System.String,System.String)">
            <summary>
            Create a git repository in a team project.
            </summary>
            <param name="projectName">Name of the project within the organization where the repository will be created</param>
            <param name="repositoryName">Name of the repository</param>
            <returns>The <see cref="T:Jmelosegui.DevOps.Client.Models.GitRepository"/> created.</returns>
        </member>
        <member name="M:Jmelosegui.DevOps.Client.GitApiClient.GetCommitsAsync(System.String,Jmelosegui.DevOps.Client.Models.Requests.CommitListRequest)">
            <summary>
            Retrieve git commits for a project.
            </summary>
            <param name="projectName">Project ID or project name.</param>
            <param name="commitListRequest">Payload used in the request.</param>
            <returns>Returns an IEnumerable of <see cref="T:Jmelosegui.DevOps.Client.Models.CommitRef"/>.</returns>
        </member>
        <member name="M:Jmelosegui.DevOps.Client.IGitApiClient.GetCommitsAsync(System.String,Jmelosegui.DevOps.Client.Models.Requests.CommitListRequest)">
            <summary>
            Retrieve git commits for a project.
            </summary>
            <param name="projectName">Project ID or project name.</param>
            <param name="commitListRequest">Payload used in the request.</param>
            <returns>Returns an IEnumerable of <see cref="T:Jmelosegui.DevOps.Client.Models.CommitRef"/>.</returns>
        </member>
        <member name="M:Jmelosegui.DevOps.Client.IGitApiClient.ListRepositoriesAsync(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Retrieve git repositories.
            </summary>
            <param name="projectName">Project ID or project name.</param>
            <param name="includeAllUrls">[optional] True to include all remote URLs. The default value is false.</param>
            <param name="includeHiddenRepositories">[optional] True to include hidden repositories. The default value is false.</param>
            <param name="includeLinks">[optional] True to include reference links. The default value is false.</param>
            <returns>A list of <see cref="T:Jmelosegui.DevOps.Client.Models.GitRepository"/>.</returns>
        </member>
        <member name="M:Jmelosegui.DevOps.Client.IGitApiClient.CreateRepositoryAsync(System.String,System.String)">
            <summary>
            Create a git repository in a team project.
            </summary>
            <param name="projectName">Name of the project within the organization where the repository will be created</param>
            <param name="repositoryName">Name of the repository</param>
            <returns>The <see cref="T:Jmelosegui.DevOps.Client.Models.GitRepository"/> created.</returns>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.ReleaseDefinitionApiClient.Connection">
            <summary>
            Gets the underlying connection.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.ReleaseApiClient.Connection">
            <summary>
            Gets the underlying connection.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.VariableGroupApiClient.Connection">
            <summary>
            Gets the underlying connection.
            </summary>
        </member>
        <member name="T:Jmelosegui.DevOps.Client.AuthenticationType">
            <summary>
            Authentication protocols.
            </summary>
        </member>
        <member name="F:Jmelosegui.DevOps.Client.AuthenticationType.Anonymous">
            <summary>
            No credentials provided
            </summary>
        </member>
        <member name="F:Jmelosegui.DevOps.Client.AuthenticationType.Basic">
            <summary>
            Username and password
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.ApiException.StatusCode">
            <summary>
            Gets the HTTP status code associated with the repsonse.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.ApiException.ApiError">
            <summary>
            Gets the raw exception payload from the response.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.ApiException.ApiErrorMessageSafe">
            <summary>
            Gets get the inner error message from the API response.
            </summary>
            <remarks>
            Returns null if ApiError is not populated.
            </remarks>
        </member>
        <member name="M:Jmelosegui.DevOps.Client.AuthorizationException.#ctor(Jmelosegui.DevOps.Client.IResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:Jmelosegui.DevOps.Client.AuthorizationException"/> class.
            Constructs an instance of AuthorizationException.
            </summary>
            <param name="response">The HTTP payload from the server.</param>
        </member>
        <member name="M:Jmelosegui.DevOps.Client.AuthorizationException.#ctor(Jmelosegui.DevOps.Client.IResponse,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Jmelosegui.DevOps.Client.AuthorizationException"/> class.
            Constructs an instance of AuthorizationException.
            </summary>
            <param name="response">The HTTP payload from the server.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Jmelosegui.DevOps.Client.ForbiddenException.#ctor(Jmelosegui.DevOps.Client.IResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:Jmelosegui.DevOps.Client.ForbiddenException"/> class.
            Constructs an instance of ForbiddenException.
            </summary>
            <param name="response">The HTTP payload from the server.</param>
        </member>
        <member name="M:Jmelosegui.DevOps.Client.ForbiddenException.#ctor(Jmelosegui.DevOps.Client.IResponse,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Jmelosegui.DevOps.Client.ForbiddenException"/> class.
            Constructs an instance of ForbiddenException.
            </summary>
            <param name="response">The HTTP payload from the server.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Jmelosegui.DevOps.Client.NotFoundException.#ctor(Jmelosegui.DevOps.Client.IResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:Jmelosegui.DevOps.Client.NotFoundException"/> class.
            Constructs an instance of NotFoundException.
            </summary>
            <param name="response">The HTTP payload from the server.</param>
        </member>
        <member name="M:Jmelosegui.DevOps.Client.NotFoundException.#ctor(Jmelosegui.DevOps.Client.IResponse,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Jmelosegui.DevOps.Client.NotFoundException"/> class.
            Constructs an instance of NotFoundException.
            </summary>
            <param name="response">The HTTP payload from the server.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Jmelosegui.DevOps.Client.Ensure">
            <summary>
              Ensure input parameters.
            </summary>
        </member>
        <member name="M:Jmelosegui.DevOps.Client.Ensure.ArgumentNotNull(System.Object,System.String)">
            <summary>
            Checks an argument to ensure it isn't null.
            </summary>
            <param name = "value">The argument value to check.</param>
            <param name = "name">The name of the argument.</param>
        </member>
        <member name="M:Jmelosegui.DevOps.Client.Ensure.ArgumentNotNullOrEmptyString(System.String,System.String)">
            <summary>
            Checks a string argument to ensure it isn't null or empty.
            </summary>
            <param name = "value">The argument value to check.</param>
            <param name = "name">The name of the argument.</param>
        </member>
        <member name="T:Jmelosegui.DevOps.Client.UriExtensions">
            <summary>
            Extensions for working with Uris.
            </summary>
        </member>
        <member name="M:Jmelosegui.DevOps.Client.UriExtensions.ApplyParameters(System.Uri,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Merge a dictionary of values with an existing <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">Original request Uri.</param>
            <param name="parameters">Collection of key-value pairs.</param>
            <returns>Updated request Uri.</returns>
        </member>
        <member name="T:Jmelosegui.DevOps.Client.ApiResponse`1">
            <summary>
            Wrapper for a response from the API.
            </summary>
            <typeparam name="T">Payload contained in the response.</typeparam>
        </member>
        <member name="M:Jmelosegui.DevOps.Client.ApiResponse`1.#ctor(Jmelosegui.DevOps.Client.IResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:Jmelosegui.DevOps.Client.ApiResponse`1"/> class.
            Create a ApiResponse from an existing request.
            </summary>
            <param name="response">An existing request to wrap.</param>
        </member>
        <member name="M:Jmelosegui.DevOps.Client.ApiResponse`1.#ctor(Jmelosegui.DevOps.Client.IResponse,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Jmelosegui.DevOps.Client.ApiResponse`1"/> class.
            Create a ApiResponse from an existing request and object.
            </summary>
            <param name="response">An existing request to wrap.</param>
            <param name="bodyAsObject">The payload from an existing request.</param>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.ApiResponse`1.Body">
            <summary>
            Gets the payload of the response.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.ApiResponse`1.HttpResponse">
            <summary>
            Gets the context of the response.
            </summary>
        </member>
        <member name="T:Jmelosegui.DevOps.Client.IConnection">
            <summary>
            A connection for making HTTP requests against URI endpoints.
            </summary>
        </member>
        <member name="T:Jmelosegui.DevOps.Client.IResponse">
            <summary>
            Represents a generic HTTP response.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.IResponse.Body">
            <summary>
            Gets raw response body. Typically a string, but when requesting files (i.e certificates), it will be a byte array.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.IResponse.Headers">
            <summary>
            Gets information about the API.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.IResponse.StatusCode">
            <summary>
            Gets the response status code.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.IResponse.ContentType">
            <summary>
            Gets the content type of the response.
            </summary>
        </member>
        <member name="T:Jmelosegui.DevOps.Client.IApiResponse`1">
            <summary>
            A response from an API call that includes the deserialized object instance.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.IApiResponse`1.Body">
            <summary>
            Gets object deserialized from the JSON response body.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.IApiResponse`1.HttpResponse">
            <summary>
            Gets the original non-deserialized http response.
            </summary>
        </member>
        <member name="T:Jmelosegui.DevOps.Client.JsonHttpPipeline">
            <summary>
                Responsible for serializing the request and response as JSON and
                adding the proper JSON response header.
            </summary>
        </member>
        <member name="T:Jmelosegui.DevOps.Client.Models.CommitRef">
            <summary>
            Provides properties that describe a Git commit and associated metadata.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.Models.CommitRef.CommitId">
            <summary>
            Gets or sets iD(SHA-1) of the commit.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.Models.CommitRef.Author">
            <summary>
            Gets or sets author of the commit.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.Models.CommitRef.Comment">
            <summary>
            Gets or sets comment or message of the commit.
            </summary>
        </member>
        <member name="T:Jmelosegui.DevOps.Client.Models.GitRepository">
            <summary>
            Provides properties that describe a GitRepository commit and associated metadata.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.Models.GitRepository.Id">
            <summary>
            Gets or sets the Id of the repository.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.Models.GitRepository.Name">
            <summary>
            Gets or sets the Name of the repository.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.Models.GitRepository.IsFork">
            <summary>
            Gets or Sets a value indicating whether the repository was created as a fork;
            True if the repository was created as a fork.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.Models.GitRepository.DefaultBranch">
            <summary>
            Gets or sets the name of the default branch in the repository.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.Models.GitRepository.Url">
            <summary>
            Gets or sets the Url of the repository.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.Models.GitRepository.ValidReponUrls">
            <summary>
            Gets or sets a collection of valid remote Urls for the repository.
            </summary>
        </member>
        <member name="T:Jmelosegui.DevOps.Client.Models.GitUserDate">
            <summary>
            User info and date for Git operations.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.Models.GitUserDate.Name">
            <summary>
            Gets or sets name of the user performing the Git operation.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.Models.GitUserDate.Email">
            <summary>
            Gets or sets email address of the user performing the Git operation.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.Models.GitUserDate.Date">
            <summary>
            Gets or sets date of the Git operation.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.Models.GitUserDate.ImageUrl">
            <summary>
            Gets or sets url for the user's avatar.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.Models.Requests.CommitListRequest.RepositoryId">
            <summary>
            Gets or sets the id or friendly name of the repository.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.Models.Requests.CommitListRequest.Top">
            <summary>
            Gets or sets the maximum number of entries to retrieve.
            </summary>
        </member>
        <member name="P:Jmelosegui.DevOps.Client.Models.Requests.CommitListRequest.SearchCriteriaVersion">
            <summary>
            Gets or sets the version string identifier (name of tag/branch, SHA1 of commit).
            </summary>
        </member>
    </members>
</doc>
